<?php
/**
 * EventApiTest
 * PHP version 7.3
 *
 * @category Class
 * @package  HiCo\EventManagerClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * HighCohesion API
 *
 * HighCohesion API [https://highcohesion.co.uk](https://highcohesion.co.uk)
 *
 * The version of the OpenAPI document: 1.0.32
 * Contact: admin@highcohesion.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace HiCo\EventManagerClient\Test\Api;

use \HiCo\EventManagerClient\Configuration;
use \HiCo\EventManagerClient\ApiException;
use \HiCo\EventManagerClient\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * EventApiTest Class Doc Comment
 *
 * @category Class
 * @package  HiCo\EventManagerClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class EventApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for getEventById
     *
     * Get an event by event id.
     *
     */
    public function testGetEventById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEventsBy
     *
     * Get a list of events by.
     *
     */
    public function testGetEventsBy()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postEvent
     *
     * Create a new batch of events and send them to be transformed.
     *
     */
    public function testPostEvent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for replicateEvent
     *
     * Replicate Event.
     *
     */
    public function testReplicateEvent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateChildEvent
     *
     * Update Child Event via the Parent Event ID and the entity name.
     *
     */
    public function testUpdateChildEvent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateEvent
     *
     * Update Event.
     *
     */
    public function testUpdateEvent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
